% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProtE_analysis.R
\name{ProtE_analyse}
\alias{ProtE_analyse}
\title{Proteomics data processing, DE analysis, GSEA and visualization.}
\usage{
ProtE_analyse(
  file = NULL,
  pd_single_dir = NULL,
  group_names = NULL,
  samples_per_group = NULL,
  normalization = FALSE,
  imputation = FALSE,
  global_filtering = TRUE,
  independent = TRUE,
  filtering_value = 50,
  parametric = FALSE,
  significance = "p",
  metadata_file = NULL,
  species = "Homo sapiens",
  p.adjust.method = "BH",
  subcollection = "GO:BP",
  LFC = 1
)
}
\arguments{
\item{file}{The whole path to the proteomics quantification data i.e. for software MaxQuant the ProteinGroups .txt or .xlsx file, for ProteomeDiscoverer the .pdResult derived .xlsx file and for DIA-NN the pg_matrix or the unique_genes_matrix .tsv or .xlsx files.  Attention: Ensure paths use '/' or '\\' as a directory separator.}

\item{pd_single_dir}{For Proteome Discoverer (PD) multiple-files' (format of a single file per sample) proteomic analysis. The specific path to the folder(s) where the Proteome Discoverer's samples from each group are located.  Attention: Ensure paths use '/' or '\\' as a directory separator.}

\item{group_names}{Not requisite if metadata_file is inserted. A character vector specifying group names. The order of the names should align with the order of the sample groups in the input tsv file.}

\item{samples_per_group}{Not requisite if metadata_file is inserted. A numerical vector giving the number of samples in each group. The order of the numbers should align with the order of the names in group_names.}

\item{normalization}{The specific method for normalizing the data.By default it is set to FALSE. Options are FALSE for no normalization of the data, "log2" for a simple log2 transformation, "Quantile" for a quantiles based normalization  and "Cyclic_Loess" for a Cyclic Loess normalization of the log2 data, "median" for a median one, "TIC" for Total Ion Current normalization, "VSN" for Variance Stabilizing Normalization and "PPM" for Parts per Million transformation of the data.}

\item{imputation}{Imputes all remaining missing values. Available methods: "LOD" for assigning the dataset's Limit Of Detection (lowest protein intensity identified), "LOD/2", "Gaussian_LOD" for selecting random values from the normal distribution around LOD with sd= 0.2*LOD,  "Gaussian_mean_sd" for sampling values from the normal distribution of the mean value of each sample with its standard deviation, "zeros" for simply assigning 0 to MVs, mean" for replacing missing values with the mean of each protein across the entire dataset, "kNN" for a k-nearest neighbors imputation using 5 neighbors (from the package VIM) and "missRanger" for a random forest based imputation using predictive mean matching (from the package missRanger). By default it is set to FALSE (skips imputation).}

\item{global_filtering}{TRUE/FALSE. If TRUE, the per-protein percentage of missing values will be calculated across the entire dataset. If FALSE, it will be calculated separately for each group, allowing proteins to remain in the analysis if they meet the criteria within any group. By default it is set to TRUE.}

\item{independent}{TRUE/FALSE If TRUE, the samples come from different populations, if FALSE they come from the same population (Dependent samples). By default, it is set to TRUE. If set to FALSE, the numbers given in the samples_per_group param must be equal to each other.}

\item{filtering_value}{The maximum allowable percentage of missing values for a protein. Proteins with missing values exceeding this percentage will be excluded from the analysis. By default it is set to 50.}

\item{parametric}{TRUE/FALSE. Specifies the statistical tests that will be taken into account for creating the PCA plots and heatmap. By default it is set to FALSE (non-parametric).}

\item{significance}{"p" or "p.adj" Specifies which of the p-values (nominal vs p.adjusted for multiple hypothesis) will be taken into account for creating the PCA plots, the heatmap and the Volcano plots. By default it is set to "p" (nominal p-value).}

\item{metadata_file}{Not requisite if samples_per_group and group_names are defined. An excel or txt table that includes in column 1 the Samples' names in column 2 the experimental group of comparison and in the rest columns, covariates (e.g. age, sex, batch) that affect the limma statistical procedures.}

\item{species}{Species name, such as "Homo sapiens" or "Mus musculus", for the genes symbols output of the msigdbr package that will be used for the GSEA. Use msigdbr_species() for available options.}

\item{p.adjust.method}{The method used to adjust the p-values for multiple testing. Options are "holm","hochberg","hommel","bonferroni","BH","BY","fdr". Default is "BH".}

\item{subcollection}{Sub-collection abbreviation, (such as "CP:REACTOME" for Reactome pathways, "H" for Hallmark and "GO:BP" for GO Biological Processes) that will be used for the GSEA. Use msigdbr_collections() for the available options.}

\item{LFC}{The LogFC threshold (absolute value) that you want to be the cutoff for the significant up or downregulation of the volcano plots}
}
\value{
Returns the complete output of the exploratory analysis: i) The processed, or filtered/normalized data ii) Statistical output containing results for the parametric (limma+ANOVA) and non-parametric tests (Wilcoxon+Kruskal-Wallis+PERMANOVA), along with statistical tests for heteroscedasticity, iii) Quality metrics for the input samples iv) QC plots and exploratory visualizations.
}
\description{
Takes as input proteomics Data from DIA-NN, MaxQuant and ProteomeDiscoverer and it performs exploratory data analysis, providing different options for  data manipulation (normalization, filtering based on the missing values and imputation). It then proceeds to perform statistical analysis and gene set enrichment analysis, while creating exploratory plots such as relative log expression boxplots and violin plots, heatmaps, PCA and Volcano plots.
}
\examples{
#Example of running the function with paths for two groups.
# The file path is a placeholder, replace it with an actual file.



proteinGroups.txt <- system.file("extdata", "proteinGroups.txt", package = "ProtE")
# Copy the file to a temporary directory for CRAN checks
temp_file <- file.path(tempdir(), "proteinGroups.txt")
file.copy(proteinGroups.txt, temp_file, overwrite = TRUE)

ProtE_analyse(file = temp_file,
       group_names = c("Healthy","Control"),
       samples_per_group = c(4,4), filtering_value = 80)


}
